double data[1000] = {
1.210939172, 1.073143816, 1.308242277, 1.372781584, 1.017482204, 0.267689761, 0.331489500, 0.624875580, 0.953959382, 0.524174713, 0.491346870,
1.024602483, 0.619326832, 1.109142777, 1.126770895, 0.752823560, 0.254135854, 0.099383542, 0.091918890, 0.648492547, 1.153270722, 0.515374740,
0.749867698, 0.802659163, 1.214378107, 1.102039468, 0.800891693, 0.341298503, 0.181041199, 0.116240312, 0.089942224, 0.239687782, 0.952788827,
0.871480741, 0.858539745, 1.113166850, 1.132386222, 1.292430035, 1.389849193, 1.046431798, 0.818170065, 0.332411334, 0.477704143, 0.289235214,
1.049578151, 0.827008302, 0.850106464, 0.759821350, 0.453990973, 0.969865417, 0.494321966, 0.149483057, 0.542005209, 0.769877359, 0.665929533,
0.378641544, 0.433908050, 0.639059040, 0.594225993, 0.954250331, 0.426038001, 1.033766969, 1.070428806, 1.334335578, 1.440368058, 1.101623533,
0.989716116, 1.238413247, 1.149415676, 1.138455990, 1.297920754, 0.919222422, 1.061627997, 0.844904156, 0.757292055, 0.842786043, 0.762774680,
0.484233739, 0.460405792, 0.618445709, 0.874018251, 0.607564663, 1.042837436, 1.200621743, 1.254040700, 0.880351874, 0.651032863, 0.283126547,
0.278055574, 0.876066467, 0.822463150, 0.753590137, 0.290829653, 1.006702351, 0.719943285, 0.963650904, 0.410240985, 0.762061111, 0.362934861,
0.953088536, 1.184110498, 1.167243445, 0.979834893, 1.166631815, 0.626250688, 0.786593940, 0.373850054, 0.926820297, 0.911801862, 0.383838341,
0.276498539, 0.398206744, 0.816785346, 0.993563311, 0.394322651, 0.111173631, -0.009549417, 0.786829866, 0.730747036, 0.907336134, 1.108726067,
1.180672553, 0.642034283, 0.663178706, 0.297173690, 0.629124703, 1.084669539, 0.730336465, 0.450450776, 0.566391155, 0.621680562, 0.870602502,
1.303061782, 0.985726980, 0.776864232, 0.252970599, 0.693369061, 0.358547244, 0.209535281, 0.553982003, 0.773051892, 0.358211417, 0.405636468,
0.907564073, 1.198218192, 0.514558669, 0.452888415, 0.241612136, 0.101064987, 0.481914748, 1.116995754, 0.761896648, 1.092470837, 1.121105236,
1.004202522, 1.104238231, 0.730388538, 0.826804149, 0.768963656, 0.465135962, 0.593579170, 0.303608362, 0.799263649, 1.067034986, 0.767818986,
0.579290110, 0.776268191, 0.841117978, 0.714429109, 0.618072522, 0.444224698, 0.478166659, 0.322041693, 0.907190577, 1.382029379, 0.875786161,
0.825139366, 1.053391075, 0.531875812, 0.094641457, 0.673475872, 0.380496664, 0.731016975, 0.981725657, 0.932394407, 0.766864686, 0.620146582,
0.600056541, 1.162688019, 1.054066454, 0.351408091, 0.244097969, 1.049728292, 1.112352794, 1.227614666, 0.966145776, 1.030410274, 0.535728742,
0.886672125, 0.955052212, 0.928116269, 0.425408875, 0.867642917, 1.008201457, 1.103396401, 0.808739993, 0.784548802, 0.860721550, 1.124426409,
0.699057589, 0.230715283, 0.268132164, 0.210146919, 0.902673539, 1.254966463, 0.869714793, 0.695132327, 0.319815179, 0.876660132, 1.210573472,
0.603611201, 0.674945204, 0.640071717, 0.341156185, 1.018929976, 1.175010555, 0.816591151, 0.993555725, 0.789012398, 1.192670268, 0.837483643,
0.231827622, 0.457945217, 1.117881782, 0.826672974, 0.703132771, 1.134774753, 0.721186961, 0.329281995, 0.637234301, 0.942343098, 1.281360387,
0.465310377, 0.616631085, 0.738161204, 1.028261885, 1.349177167, 0.854429394, 0.384195277, 0.348156982, 0.190252535, 0.669763429, 0.990896802,
1.291704283, 1.123170568, 0.507283437, 0.564625320, 0.399818838, 0.130616824, 0.654726588, 0.393403034, 1.055358878, 0.869521796, 0.525381480,
0.676712248, 0.909422475, 0.531031895, 0.661284100, 1.188616779, 0.801163767, 0.745807190, 1.038848488, 0.959417311, 0.706170891, 0.954334179,
0.639677314, 0.358196050, 1.028953101, 1.196489519, 0.961797980, 0.357156817, 0.879228285, 0.500631771, 0.908558726, 0.926061568, 0.355664519,
0.069740008, 0.718242948, 0.568631919, 0.772203115, 1.125494573, 0.456807230, 0.733980708, 0.630086338, 1.188592468, 1.138491687, 0.972800418,
1.085933336, 0.492844321, 0.438053285, 0.217111536, 0.426342943, 0.216633531, 0.790407706, 1.249341267, 0.715370015, 0.743370904, 1.063016627,
0.942862961, 0.818277609, 0.403071468, 0.776795744, 1.292196495, 1.003174707, 1.133764204, 0.546147470, 0.757368821, 0.676493315, 0.392010331,
0.145584294, 0.732861061, 1.176859410, 1.238895556, 1.219630312, 0.762173816, 0.347162783, 0.500296042, 0.528879511, 0.742768671, 0.599974356,
0.483028025, 0.842547903, 1.332996678, 1.212097632, 0.891117226, 0.884731201, 0.579517354, 0.143813075, 0.853856509, 0.458964067, 0.784094018,
0.893338206, 1.256995580, 1.357342642, 1.431949482, 0.809135913, 0.698785154, 0.489541660, 0.839674104, 0.339521413, 1.007389139, 1.034845474,
0.474372887, 0.679631755, 0.723277472, 0.415380924, 0.544042078, 0.679092625, 0.739581741, 1.233025437, 0.709747577, 1.090810879, 1.153513971,
0.640843715, 0.201506927, 0.033712304, 0.737220323, 0.711092760, 0.449380022, 0.311722439, 0.351387006, 1.010321490, 0.689635681, 0.609010344,
0.449307279, 0.563076551, 0.357824058, 0.309219014, 0.804255999, 0.880331558, 1.195850612, 1.181862613, 1.179075792, 0.914298070, 1.085371339,
0.526153710, 0.479733762, 1.017485447, 0.820860358, 0.881715575, 1.171119370, 1.423424910, 1.319778867, 0.498390549, 0.827721645, 0.436120273,
0.253036367, 0.840113467, 0.430901456, 0.516838562, 0.364494362, 0.405283541, 0.652376175, 0.320475633, 0.140902807, 0.708410452, 0.809164410,
0.521263275, 1.058841482, 0.621873127, 0.335455388, 0.491192563, 0.586972848, 0.420263222, 0.812279183, 0.854014672, 1.218759222, 1.212471289,
0.810231297, 0.404479076, 0.309302004, 0.503497255, 1.184387814, 1.186204998, 0.574047680, 1.007517473, 1.112713552, 0.757023960, 0.806759477,
0.418491760, 0.550644872, 0.837162880, 1.217315604, 0.548369840, 0.628213230, 0.655271749, 0.327879590, 0.113343255, 0.782467480, 0.823806689,
1.186658390, 0.470390419, 0.870553062, 0.671849835, 0.699994982, 0.383021605, 0.323100744, 1.014016876, 1.143199740, 0.900203146, 1.031170410,
0.751362707, 0.779434901, 1.110089995, 0.880974444, 0.252736981, 0.662988085, 0.328887320, 0.762747128, 0.896968835, 1.166524735, 0.632576975,
0.607383390, 0.912255839, 0.994137933, 0.545251625, 0.134084881, 0.113964249, 0.581222112, 0.309585496, 0.981489750, 0.539325213, 0.561075034,
0.408370771, 0.188639214, 0.462322632, 0.714506095, 0.937043639, 0.429395352, 1.037129648, 0.685778987, 0.352751780, 0.869240171, 0.925526194,
1.313941699, 1.223542893, 0.900299061, 0.556194261, 0.629844920, 1.094172555, 1.212859994, 0.533516618, 0.464320473, 0.257717324, 0.857054318,
0.948387355, 0.724905334, 1.082048274, 0.795630001, 1.102250878, 1.060134232, 0.429091306, 0.976856289, 1.136852000, 0.871717455, 0.239311661,
0.604847042, 0.774717491, 0.839064081, 0.755641356, 0.791343134, 0.427303166, 0.784014601, 1.027605448, 0.628962996, 1.034666368, 0.859907691,
0.999256564, 0.803261046, 1.098539922, 0.502292001, 0.268408093, 0.815241536, 0.953828363, 0.938289343, 0.311920494, 0.283877219, 0.956110502,
1.083967714, 0.818513350, 0.234197502, 0.344801782, 0.445417344, 1.123733756, 1.243145336, 1.235256196, 0.632770671, 0.547178924, 0.776367503,
1.277509320, 1.376259956, 0.600091469, 0.438070962, 1.056595112, 1.386029898, 1.024182844, 0.798913898, 0.929124141, 0.938644421, 0.770511836,
0.476737389, 0.715509584, 0.769567653, 0.767741652, 0.561207054, 0.407616117, 0.254219956, 0.366840223, 0.878541951, 0.716348378, 0.870251284,
0.603669571, 0.512214406, 1.026487873, 1.285632347, 1.103756468, 1.280651962, 0.457451622, 0.532740539, 0.653484042, 1.035493710, 0.972905291,
0.579756381, 1.032531458, 0.989553303, 0.379444847, 0.127725243, 0.496785608, 0.528446571, 0.757784697, 0.395236548, 0.087488367, 0.871954114,
0.602995123, 0.491183128, 1.041361253, 1.204629226, 0.938489099, 0.379491638, 0.051684641, 0.376163659, 0.274371470, 0.402909006, 1.016605741,
0.712722701, 0.456327336, 0.107310753, 0.246038891, 1.023006237, 0.597364933, 0.248157022, 0.884422779, 1.051050238, 0.380458495, 0.140475289,
0.365288330, 1.036536717, 0.704682732, 0.336263275, 0.187708699, 0.527592366, 0.333651954, 0.959132467, 1.266437400, 1.358968051, 0.737257526,
0.445471348, 0.174862959, 0.148487874, 0.718431109, 1.183184934, 0.538252255, 0.701131603, 1.053566261, 0.736864880, 0.288165956, 0.632469647,
0.462690755, 0.870032282, 1.230706752, 1.254526473, 0.908477304, 1.106211530, 0.899928848, 1.111424869, 1.189155261, 1.347413170, 0.793047896,
0.679677642, 0.660272263, 1.107209134, 1.148217862, 1.364145517, 1.130601308, 1.183621088, 0.822046552, 0.514552214, 0.777266228, 0.387442182,
1.011571243, 1.243344746, 0.945625078, 0.925992575, 0.694655220, 0.512537919, 0.390369400, 0.352664295, 0.420972581, 1.071018178, 1.415934440,
1.012627997, 0.832690589, 0.609670165, 0.780956150, 0.561319761, 0.533088562, 1.010778424, 0.986694594, 0.951807450, 0.405970266, 0.161175058,
0.933104237, 0.834961666, 0.803470567, 1.091206899, 0.831702688, 0.731610865, 0.354063823, 0.360793587, 0.408565212, 1.037428456, 0.973189920,
0.318948913, 0.279880655, 0.724111295, 1.042630231, 1.036965392, 0.901793008, 0.265268778, 0.233449328, 0.160667981, 0.271560210, 0.931577648,
0.530813228, 0.254021996, 0.137840870, 0.233758617, 0.530566517, 0.959852827, 1.139392822, 0.811362771, 0.603220913, 0.441106705, 1.018569382,
0.879533574, 0.956702543, 1.268315577, 0.862765012, 1.026592808, 0.595418280, 0.237641878, 0.131711415, 0.780356470, 0.523854499, 0.198786667,
0.604101642, 0.401117712, 0.783375823, 1.076592553, 0.816496641, 0.899839965, 0.961991313, 0.780522888, 0.469717360, 0.261845764, 0.947416287,
1.247512715, 1.417037265, 0.827347919, 0.772506954, 0.377733989, 0.380151348, 1.021365294, 0.600306114, 0.234920354, 0.239237614, 0.789453136,
0.590684838, 0.557538415, 1.006059091, 0.596578779, 0.486236791, 0.319796952, 0.252082511, 0.450978995, 0.860343559, 1.204967408, 1.226152327,
1.334150500, 1.137122772, 0.411650407, 0.884365129, 1.233197803, 0.573065926, 0.832989417, 0.365991138, 0.820970478, 1.035302269, 0.914843508,
1.155225744, 1.160686332, 1.340498129, 0.680909333, 0.492106562, 0.209090151, 0.446196163, 0.637251731, 0.873967128, 0.635712343, 0.527462132,
0.628082910, 0.868897286, 0.580390094, 0.785980560, 1.161954065, 0.718823761, 0.307554386, 0.610511864, 0.763736273, 0.404749550, 0.202319372,
0.997755195, 1.256619544, 1.454489461, 0.661101029, 0.464682110, 0.195349897, 0.361142732, 0.993484265, 0.608338463, 0.136338480, 0.392420588,
0.388952646, 0.681583978, 0.973751290, 0.812382566, 0.308055963, 0.844044206, 1.231030802, 0.766346218, 0.398292845, 0.291064540, 0.557886612,
1.013041179, 0.458148229, 0.839111316, 1.114542919, 0.617105171, 0.420951893, 1.027813450, 1.111055501, 1.076710904, 0.534654523, 1.043756117,
0.559241708, 1.018649104, 1.234923104, 1.445448691, 1.283685017, 1.352658314, 1.397203403, 1.222540925, 1.024533562, 0.773587436, 1.214537541,
0.620945029, 0.427589211, 0.742273654, 0.606024319, 0.181068120, 0.092865711, 0.522245064, 0.759737863, 0.654177863, 1.028071458, 0.706584615,
0.500058763, 1.091560330, 1.329666730, 0.984181132, 1.198616978, 1.360655109, 1.086075525, 1.152797128, 1.078442618, 0.810726474, 1.078578320,
0.600750914, 0.268629181, 0.076895393, 0.327447130, 0.974215817, 1.218192544, 0.805044458, 0.341772166, 1.006802609, 1.060254928, 1.089133581,
0.871947470, 0.269510357, 0.114027031, 0.754508269, 0.463951232, 1.066939331, 0.591424202, 0.219256266, 0.708590180, 0.917167173, 0.862650017,
0.803917678, 0.942058249, 0.636262479, 0.717329762, 1.196151924, 0.942406910, 0.780305562, 0.761282643, 0.567206110, 0.913489835, 0.472756201,
0.892802757, 0.895079464, 1.315477421, 1.435045944, 1.419413451, 0.883144444, 0.372950501, 0.651154915, 1.231652110, 0.928767345, 0.795976197,
0.961060936, 0.996957823, 1.025877476, 0.894471434, 1.192528665, 1.218772757, 0.459480114, 0.531695733, 0.845589013, 0.573069255, 1.029613166,
0.479870343, 1.023879886, 0.497126572, 0.344464974, 0.075090459, 0.447458948, 0.998799277, 0.793621434, 0.990461723, 1.304745272, 1.352022970,
1.235184068, 0.904768761, 0.717155163, 0.256119296, 0.145654815, 0.772600213, 1.275323305, 0.909042459, 1.085231133, 0.704706597, 1.105697329,
0.828793776, 0.769179581, 0.998787671, 0.550487519, 0.569718881, 1.139443063, 1.161540148, 0.714025644, 0.861061823, 0.487710062, 0.257734070,
0.369674861, 0.215474321, 0.465642342, 0.391452722, 0.209494925, 0.552200929, 1.212367148, 1.230322360, 0.792500985, 0.535578265, 1.074253678,
1.269508894, 1.009489303, 0.324713541, 0.435264555, 1.155181197, 1.374175430, 1.332811291, 0.643005241, 0.796754825, 0.885277533, 0.502638999,
0.476530982, 0.302553945, 0.924474951, 1.293561523, 0.507344168, 0.273033836, 0.461755206, 0.538421398, 0.719180053, 1.228692526, 1.489045528,
0.681629942, 0.128355912, 0.781904850, 0.772138084, 0.521781607, 1.034177922, 1.413637448, 0.783243987, 0.898662144, 1.012652447, 0.568492805,
0.738065301, 1.140504844, 0.649497059, 0.317636010, 1.014294624, 0.848600384, 0.573591067, 0.195927691, 0.964194465, 0.481832462, 0.160466766,
0.530487130, 1.099688847, 1.306406377, 1.193760415, 1.262309672, 0.854763313, 0.550068838, 0.593239264, 1.080022487, 0.589493733,

};


#include <iostream>
#include <iomanip>
#include <gsl/gsl_fft_complex.h>
#include <gsl/gsl_fft_halfcomplex.h>
#include <gsl/gsl_fft_real.h>
#include <gsl/gsl_matrix.h>
#include <gsl/gsl_vector.h>
#include <gsl/gsl_linalg.h>

using namespace std;

#define REAL(i) (2*i)
#define IMAG(i) (2*i+1)

/** 
 * @brief Since both directions are the same +/-, we only care about the positive
 * therefore the input data sohuld be zero padded with at least "lags" zeros on
 * the end, and the first lags points will be unspoiled.
 *
 * @param input
 * @param size
 */
//int autocorrelation(double* input, int size)
//{
//	int ret = gsl_fft_real_radix2_transform(input, 1, size);
//	if(ret != GSL_SUCCESS) return -1;
//
//	
//	//organization (0, and worksize/2 are unpaired, all others are
//	//real-complex pairs. 
//	//0 1 2 3 4 5 6 7 
//	//|
//	//  |           |
//	//    |       |
//	//      |   |
//	//        |
//	//ff = 0
//	double* tmp = new double[size*2];
//	tmp[REAL(0)] = input[0]*input[0];
//	tmp[IMAG(0)] = 0;
//
//	//f = work_wize/2
//	tmp[REAL(size/2)] = input[size/2]*input[size/2];
//	tmp[IMAG(size/2)] = 0;
//
//	//for all the paired frequencies
//	for(int ff = 1; ff < size/2 ; ff++) {
//		tmp[REAL(ff)] = input[ff]*input[ff]+input[size-ff]*input[size-ff];
//		tmp[IMAG(ff)] = 0;
//		
//		tmp[REAL(size-ff)] = input[ff]*input[ff]+input[size-ff]*input[size-ff];
//		tmp[IMAG(size-ff)] = 0;
//	}
//	
//	ret = gsl_fft_complex_radix2_inverse(tmp, 1, size);
//	if(ret != GSL_SUCCESS) return -1;
//
//	for(int ii = 0 ; ii < size*2 ; ii++) {
//		cerr << ii << ": " << tmp[REAL(ii)] << " +i" << tmp[IMAG(ii)] << endl;
//	}
//
//	for(int ii = size-1 ; ii >= 0 ; ii--)
//		input[ii] = tmp[REAL(ii)]/tmp[0];
//
//	return 0;
//}
int autocorrelation(double* input, int size)
{
	int ret = gsl_fft_real_radix2_transform(input, 1, size);
	if(ret != GSL_SUCCESS) return -1;
	
	//organization (0, and worksize/2 are unpaired, all others are
	//real-complex pairs. 
	//0 1 2 3 4 5 6 7 
	//|
	//  |           |
	//    |       |
	//      |   |
	//        |
	//ff = 0
	input[0] *= input[0];

	//f = work_wize/2
	input[size/2] *= input[size/2];

	//for all the paired frequencies
	for(int ff = 1; ff < size/2 ; ff++) {
		input[ff] = input[ff]*input[ff]+input[size-ff]*input[size-ff];
		input[size-ff] = 0;
	}
	
	ret = gsl_fft_halfcomplex_radix2_inverse(input, 1, size);
	if(ret != GSL_SUCCESS) return -1;

	for(int ii = size-1 ; ii >= 0 ; ii--)
		input[ii] /= input[0];

	return 0;
}

/* Takes an unsigned int and rounds up to the neared
 * power of 2. Used for FFT */
unsigned int round_power_2(unsigned int in) 
{
    unsigned int count = 0;
    while(in != 0) {
        count++;
        in >>= 1;
    }

    //set the size of the temporary var and the buffer
    return(1 << count);
}

int main()
{
	int len = 1000;
	int lags = 10;
	size_t work_size = round_power_2(len*2+lags);
	double* working = new double[work_size];
	int tt;
	double mean = 0;
	double var = 0;
	for(tt = 0 ; tt < len; tt++) {
		mean += data[tt];
		var += data[tt]*data[tt];
	}
	mean /= len;
	var = var/len - mean*mean; 
	for(tt = 0 ; tt < len; tt++) {
		working[tt] = (data[tt]-mean)/sqrt(var);
	}
	for(; tt < work_size; tt++) 
		working[tt] = 0;
	
	autocorrelation(working, work_size);

	std::cout.setf(std::ios::fixed);
	for(int ii = 0 ; ii < work_size; ii++) {
		cout << std::setw(6) << std::setprecision(3) << working[ii] << ", " ;
	}
	cout << endl;

}
